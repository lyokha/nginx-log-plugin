# this nginx configuration file is for demonstration purpose only

user                    nobody;
worker_processes        4;

events {
    worker_connections  1024;
}

error_log               /tmp/nginx-test-error-g.log info;

http {
    default_type        application/octet-stream;
    sendfile            on;

    error_log           /tmp/nginx-test-error.log info;
    access_log          /tmp/nginx-test-access.log;

    haskell load /var/lib/nginx/ngx_log.so;

    server {
        listen          8010;
        server_name     main;

        haskell_run logInfo !$msgG "Write in global log!";

        location / {
            haskell_run logInfoR <!$msg0 '$_r_ptr
                    Got query "$args"';

            if ($arg_a) {
                haskell_run logInfoR <!$msg1 '$_r_ptr
                        Got a = "$arg_a"';
            }

            haskell_run logInfoR !$msgR '$_r_ptr
                    Request finished';

            if ($arg_c) {
                rewrite ^ /rewr last;
            }

            echo Ok;
        }

        location /rewr {
            haskell_run logInfoR <!$msg2 '$_r_ptr
                    [In /rewr] Got query "$args"';

            if ($arg_a) {
                haskell_run logInfoR <!$msg3 '$_r_ptr
                        [In /rewr] Got a = "$arg_a"';
            }

            echo "In /rewr";
        }

        location /tee {
            haskell_async_content tee "$_r_ptr
                    Hello, world!";
        }

# TYPICAL USE CASES AND GOTCHAS

# Log both outside-if and inside-if messages
        location /1 {
            haskell_run logInfoR <!$msg0 '$_r_ptr
                    Got query "$args"';

            if ($arg_a) {
                haskell_run logInfoR <!$msg1 '$_r_ptr
                        Got a = "$arg_a"';
            }

            echo "URI: $uri";
        }

# $ curl 'http://localhost:8010/1?a=1'
# URI: /1
# 2020/11/03 16:45:40 [info] 21255#0: *3 Got query "a=1", client: 127.0.0.1, server: main, request: "GET /1?a=1 HTTP/1.1", host: "localhost:8010"
# 2020/11/03 16:45:40 [info] 21255#0: *3 Got a = "1", client: 127.0.0.1, server: main, request: "GET /1?a=1 HTTP/1.1", host: "localhost:8010"

# Log only inside-if message when entering if clause
        location /2 {
            haskell_run logInfoR !$msg0 '$_r_ptr
                    Got query "$args"';

            if ($arg_a) {
                haskell_run ! $msg0 '';
                haskell_run logInfoR <!$msg1 '$_r_ptr
                        Got a = "$arg_a"';
            }

            echo "URI: $uri";
        }

# $ curl 'http://localhost:8010/2?a=1'
# URI: /2
# 2020/11/03 16:47:32 [info] 21255#0: *4 Got a = "1", client: 127.0.0.1, server: main, request: "GET /2?a=1 HTTP/1.1", host: "localhost:8010"

# Log rewrite last
        location /3 {
            haskell_run logInfoR $msg0 '$_r_ptr
                    URI $uri will be rewritten to /rewr"';
            rewrite ^ $msg0/rewr last;
        }

# $ curl 'http://localhost:8010/3?a=1'
# In /rewr
# 2020/11/03 16:49:02 [info] 21255#0: *6 URI /3 will be rewritten to /rewr", client: 127.0.0.1, server: main, request: "GET /3?a=1 HTTP/1.1", host: "localhost:8010"
# 2020/11/03 16:49:02 [info] 21255#0: *6 [In /rewr] Got query "a=1", client: 127.0.0.1, server: main, request: "GET /3?a=1 HTTP/1.1", host: "localhost:8010"
# 2020/11/03 16:49:02 [info] 21255#0: *6 [In /rewr] Got a = "1", client: 127.0.0.1, server: main, request: "GET /3?a=1 HTTP/1.1", host: "localhost:8010"

# [GOTCHA] Log only outside-if message even when entering if clause
        location /4 {
            haskell_run logInfoR <!$msg0 '$_r_ptr
                    Got query "$args"';

            if ($arg_a) {
                haskell_run logInfoR <!$msg0 '$_r_ptr
                        Got a = "$arg_a"';
            }

            echo "URI: $uri";
        }

# $ curl 'http://localhost:8010/4?a=1'
# URI: /4
# 2020/11/03 16:50:53 [info] 21255#0: *8 Got query "a=1", client: 127.0.0.1, server: main, request: "GET /4?a=1 HTTP/1.1", host: "localhost:8010"

    }
}

# vim: ft=nginx
